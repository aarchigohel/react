{"ast":null,"code":"var _s = $RefreshSig$();\n//lesson 20 custom hook (custom hook name start with 'use')\n\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, []);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"mwd+HVfi1IseCN7eOoDKFpUqdyU=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"sources":["C:/Users/gohel/OneDrive/Desktop/program/react js/my-app2/src/useFetch.js"],"sourcesContent":["//lesson 20 custom hook (custom hook name start with 'use')\r\n\r\nimport {useState,useEffect} from 'react';\r\n\r\nconst useFetch =(url)=>{\r\n    const [data,setData]=useState(null);\r\n    const [isPending,setIsPending]=useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n        fetch(url)\r\n        .then(res=>{\r\n          if (!res.ok) { // error coming back from server\r\n            throw Error('could not fetch the data for that resource');\r\n          } \r\n          return res.json();\r\n        })\r\n        .then(data=>{\r\n          setIsPending(false);\r\n          setData(data);\r\n          setError(null);\r\n       })\r\n       .catch(err => {\r\n        // auto catches network / connection error\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n      }, 1000);\r\n      }, [])\r\n\r\n      return {data,isPending,error}\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA;;AAEA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,MAAMC,QAAQ,GAAGC,GAAG,IAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAI;IACVU,UAAU,CAAC,MAAI;MACfC,KAAK,CAACT,GAAG,CAAC,CACTU,IAAI,CAACC,GAAG,IAAE;QACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UAAE;UACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACR,IAAI,IAAE;QACVG,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAACD,IAAI,CAAC;QACbK,QAAQ,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;QACb;QACAX,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;IACF,CAAC,EAAE,IAAI,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAACf,IAAI;IAACE,SAAS;IAACE;EAAK,CAAC;AACnC,CAAC;AAAAL,EAAA,CA5BKF,QAAQ;AA8Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}